---
- name: Staging server Deployment
  hosts: stageserver
  become_user: root
  become: True
  #Define Default Variable here
  vars:
    repo_path: nrbaskar/hariapp:{{DOCKER_TAG}}
    dest_path: /home/ec2-user/{{DOCKER_TAG}}
  tasks:
    # Install python pip in dest server
    - name: Install python pip
      yum:
        name: python-pip
        state: present
    # Install docker service in dest server
    - name: Install docker
      yum:
        name: docker
        state: present
    # Start the docker service in dest server
    - name: start docker
      service:
        name: docker
        state: started
        enabled: yes
    # Install docker-python Module in dest server
    - name: Install docker-py python module
      pip:
        name: docker-py
        state: present
    #Pull Docker Image from Docker Hub to dest server 
    - name: Pull httpd docker image
      docker_image:
        name: nrbaskar/hariapp
        tag: "{{DOCKER_TAG}}" #Provide the DOCKER TAG
        source: pull
    # Create a Directory in dest server
    - name: create directory
      file:
        state: directory
        dest: "{{ dest_path }}"
    # Copy Files from default docker dir into created dir
    - name: Copy website to the host
      copy:
        src: ./
        dest: "{{ dest_path }}"
    # Install NodeJS library
    - name: Install Nodejs & ExpressJS
      shell: 'curl --silent --location https://rpm.nodesource.com/setup_16.x | bash -'
    - name: Install reqired packages
      yum:
        name: nodejs
        state: present
    # Install Expressjs ( If it's required )
    - name: Install Expressjs
      command: npm install express
    # Install ejs Package ( If it's required )
    - name: Install ejs
      command: npm install ejs
    # Install all the necessary Node modules for the project,
    # using `npm`.
    - name: Install project dependencies
      command: npm install
      args:
        chdir: "{{ dest_path }}"
    # Install PM2 service tool.
    # This tool is used to run the Node server in background
    # and keep tracking of the running process
    - name: Install PM2 Server
      npm: name=pm2 global=yes state=present
    # Get All Running List in PM2
    - name: Get PM2 list of running processes
      command: pm2 status
      register: pm2_status
      changed_when: false
    # PM2 Kill Process all running existing services
    - name: delete all service
      command: pm2 kill
    # Start the node server using "PM2"
    - name: Start service
      command: pm2 start app.js --name "{{DOCKER_TAG}}-Service"
      args:
        chdir: "{{ dest_path }}"
